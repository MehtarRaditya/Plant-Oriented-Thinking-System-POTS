/* 
  Sketch generated by the Arduino IoT Cloud Thing "POTS_Thing"
  https://create.arduino.cc/cloud/things/13b70b44-8154-4553-badc-0ff3f5b0f97f 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudTemperatureSensor temperature;
  int moisturePercentage;
  CloudRelativeHumidity humidity;
  bool doWatering;
  bool waterLevel;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include "DHT.h"

#define DHTPIN 4        // Used pin
#define DHTTYPE DHT11   // Sensor Type
DHT dht(DHTPIN, DHTTYPE);

#define WATER_PIN 34

#define MOISTURE_PIN 32
int moistureValue;

#define PUMP_PIN 5

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  //SetUp Sensors
  dht.begin();
  pinMode(WATER_PIN, INPUT);
  pinMode(PUMP_PIN, OUTPUT);
  digitalWrite(PUMP_PIN, HIGH);

  // Defined in thingProperties.h
  initProperties();
  
  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
}

void loop() {
  ArduinoCloud.update();
  
  // Function Loop
  readDHT11();
  readWater();
  readMoisture();
}

void readDHT11(){
  temperature = dht.readTemperature();
  humidity = dht.readHumidity();
}

void readWater(){
  int water = analogRead(WATER_PIN);
  if (water > 300) { //analog value is adjustable, 300 at least minimum to check water
    //Check if water avaiable
    waterLevel = true;
  } else {
    //Check if empty
    waterLevel = false;
  }
}

void readMoisture() {
  moistureValue = analogRead(MOISTURE_PIN);

  moisturePercentage = map(moistureValue, 1400, 3040, 0, 100);
}


/*
  Since DoWatering is READ_WRITE variable, onDoWateringChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onDoWateringChange()  {
  // Add your code here to act upon DoWatering change

  //Active LOW Relay only active when the input is LOW
  if (doWatering && waterLevel){
    //Activate Relay & Pump
    digitalWrite(PUMP_PIN, LOW);
    delay(500);
  }
  else {
    // Deactivate
    digitalWrite(PUMP_PIN, HIGH);
  }
}
